services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: book_recommendations
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  data-importer:
    build: ./database
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=book_recommendations
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./database/data:/data
    command: |
      sh -c "
        echo 'Waiting for database to be ready...'
        sleep 10
        echo 'Downloading data...'
        ./download_data.sh || echo 'Download failed, checking existing files...'
        echo 'Starting data import...'
        python data_import.py
        echo 'Data import completed'
      "

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=book_recommendations
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      db:
        condition: service_healthy
      data-importer:
        condition: service_completed_successfully
    volumes:
      - ./backend:/app

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  postgres_data:
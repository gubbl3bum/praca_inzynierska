services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/book_recommendations
      - POSTGRES_DB=book_recommendations
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - DEBUG=1
      - GOOGLE_BOOKS_API_KEY=${GOOGLE_BOOKS_API_KEY:-}

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    depends_on:
      - backend

  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./database/init:/docker-entrypoint-initdb.d/
      - ./database/data:/data/
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=book_recommendations
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d book_recommendations"]
      interval: 10s
      timeout: 5s
      retries: 5

  data-importer:
    build: 
      context: ./database
      dockerfile: Dockerfile.importer
    depends_on:
      db:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=book_recommendations
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - GOOGLE_BOOKS_API_KEY=${GOOGLE_BOOKS_API_KEY:-}
    volumes:
      - ./database/data:/data/

volumes:
  postgres_data:
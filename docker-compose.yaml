services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: book_recommendations
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  data-importer:
    build: ./database
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=book_recommendations
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./database/data:/data
      - ./backend:/backend  # Mount backend do /backend zamiast /app
    working_dir: /app  # Pracuj z /app (gdzie są skrypty)
    command: |
      sh -c "
        echo 'Waiting for database to be ready...'
        sleep 5
        
        echo 'Add backend to PYTHONPATH...'
        export PYTHONPATH=/backend:/app
        
        echo 'Starting data import...'
        python data_import.py
        
        echo '✅ Data import completed'
        echo 'Check Django Admin: http://localhost:8000/admin/'
        echo 'Check API: http://localhost:8000/api/books/'
        
        # Utrzymaj kontener żywy przez 30 sekund dla debugowania
        sleep 30
        echo 'Data importer finished successfully'
      "
    restart: "no"

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=book_recommendations
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      data-importer:
        condition: service_completed_successfully
    volumes:
      - ./backend:/app
    restart: unless-stopped

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - db
    restart: unless-stopped

volumes:
  postgres_data: